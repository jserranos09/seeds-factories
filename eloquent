Creating a database:

1. create migration:
php artisan make:migration create_dogs_table
- This file will hold our table creation information, but until we run the actual artisan migrate command
- we can do anything we want to it with no consequences - including throwing it away completely

2. migrate database
php artisan migrate
- this will add the table to the database

3. rollback
php artisan migrate:rollback
- if we make a mistake, we can use rollback to undo migrate
- this will delete the table in the database by usin the down() method

4. Seeders
php artisan make:seeder DogsTableSeeder
- add info to the class for the database
- this is a way to be able to add,delete, and edit the database while you work
use App\Models\Dog;
- must add to use Dog class

5. Model
php artisan make:model Dog -m
- the -m  will take the name of our model and assume a lowercase, pluralized form and creates a migration for it

6. artisan database
php artisan db:seed --class=DogsTableSeeder
- this will put whatever is in the seed in the databse table

- runs the code below
\App\Models\Dog::truncate();
\App\Models\Dog::create(['name' => 'Joe']);
- must have a model in order to do this.

7. use factories/seeders to get realisitc fake data
php artisan make:factory DogFactory
(php artisan make:factory DogFactory --model=Dog) ----- to make the facotry and model together
- makes a factory class under app\database\factories

\App\Models\Dog::truncate();
Dog::factory(50)->create();
--------
'name' => $this->faker->Firstname
---------
$this->call(DogsTableSeeder::class);
- add the info to the factory/seeder/database to get the info you want to generate

php artisan db:seed
- this will ad the info to the database



---------

global traits:
- applied to all records on that model

1. add builder class to Dogs model
use Illuminate\Database\Eloquent\Builder;

2. add code to the Dogs model
- the scope fitlers/blocks all the younger dogs

3. use the scopes in tinker
App\Models\Dogs::withoutGlobalScope('age')->get(); // result is a
ll records
App\Models\Dogs::all();  //result is 1 record
App\Models\Dogs::find(2);  // result is null


-----------

Ways to add to the database table (using tinker)
Table has id, name, age, created_at, updated_at

- must make the table fillable in the model
protected $fillable = ['name', 'age'];


Old method:
DB::table('dogs')->insert(['name' => 'Old Yeller', 'age' => 12]);       // result "true"
- doesnt add any time stamps


eloquent long way:
$dog = new \App\Models\Dogs();              // result "App\Dogs"
$dog->name = 'Just-right Yeller';    // result "Just-right Yeller"
$dog->age = 6;                      // result 6
$dog->save();                       // result "true"


eloquent short way
\App\Models\Dogs::create(['name' => 'Young Yeller', 'age' => 3]);
$dog->save();                       // result "true"




notes:
- Seeders - a special set of classes that allow us to populate our database over and over with the same exact data.
- Eloquent will assume that if you create a model called "Dog" that your table name is called "dogs" and your primary key is "id

